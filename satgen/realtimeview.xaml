<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="Racelogic.Gnss.SatGen.BlackBox.RealTimeView" MinWidth="526" MinHeight="332" UseLayoutRounding="True" SnapsToDevicePixels="True" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:Racelogic.Gnss.SatGen.BlackBox" xmlns:satgen="clr-namespace:Racelogic.Gnss.SatGen;assembly=Racelogic.Gnss.SatGen" xmlns:ctr="clr-namespace:Racelogic.WPF.Controls;assembly=Racelogic.WPF.Controls" xmlns:utils="clr-namespace:Racelogic.WPF.Utilities;assembly=Racelogic.WPF.Utilities">
  <UserControl.Resources>
    <local:AttenuationMultiValueConverter x:Key="AttenuationMultiValueConverter" />
    <utils:NegatingConverter x:Key="NegatingConverter" />
    <utils:EnumToBoolConverter x:Key="EnumToBoolConverter" />
    <utils:DoubleToBoolConverter x:Key="DoubleToBoolConverter" />
    <utils:ValueConverterGroup x:Key="DoubleToVisibilityConverter">
      <utils:DoubleToBoolConverter />
      <utils:BoolToVisibilityConverter />
    </utils:ValueConverterGroup>
    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
      <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
      <Setter Property="ContentControl.ContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <Label Padding="0" Margin="0" Content="{Binding}" />
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>
  <Grid Margin="-2,0">
    <Grid.RowDefinitions>
      <RowDefinition Height="100" />
      <RowDefinition Height="8" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <Grid Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <GroupBox Name="StatusGroupBox" Header="Status" Grid.Row="0" Margin="8, 0, 3, 6">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <TextBlock Text="Synchronising" Margin="0" Grid.Row="0" Visibility="Hidden" />
          <ctr:LedGauge Name="StatusLed" Grid.Row="1" IsOn="True" Width="52" Height="52" HorizontalAlignment="Center" Margin="0,1,0,-1">
            <ctr:LedGauge.Style>
              <Style TargetType="{x:Type ctr:LedGauge}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="None">
                    <Setter Property="ctr:LedGauge.Color" Value="Gray" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="Connected">
                    <Setter Property="ctr:LedGauge.Color" Value="Yellow" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="Transmitting">
                    <Setter Property="ctr:LedGauge.Color" Value="Green" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="BufferUnderrun">
                    <Setter Property="ctr:LedGauge.Color" Value="Red" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="ConnectionLost">
                    <Setter Property="ctr:LedGauge.Color" Value="Red" />
                    <Setter Property="ctr:LedGauge.IsFlashing" Value="True" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </ctr:LedGauge.Style>
          </ctr:LedGauge>
          <TextBlock Name="BufferUnderrunCountTextBlock" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="#FFFFFFFF" TextBlock.FontWeight="Bold" Text="{Binding BufferUnderrunCount}" Visibility="{Binding BufferUnderrunCount, Converter={StaticResource DoubleToVisibilityConverter}}">
            <TextBlock.Style>
              <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextBlock.FontSize" Value="28" />
                <Setter Property="FrameworkElement.Margin" Value="0,-3,-2,0" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding BufferUnderrunCount, Converter={StaticResource DoubleToBoolConverter}, ConverterParameter=9}" Value="True">
                    <Setter Property="TextBlock.FontSize" Value="26" />
                    <Setter Property="FrameworkElement.Margin" Value="0,-3,-1,0" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding BufferUnderrunCount, Converter={StaticResource DoubleToBoolConverter}, ConverterParameter=99}" Value="True">
                    <Setter Property="TextBlock.FontSize" Value="20" />
                    <Setter Property="FrameworkElement.Margin" Value="0,-2,-1,0" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding BufferUnderrunCount, Converter={StaticResource DoubleToBoolConverter}, ConverterParameter=999}" Value="True">
                    <Setter Property="TextBlock.FontSize" Value="15" />
                    <Setter Property="FrameworkElement.Margin" Value="0,-1,-1,0" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding BufferUnderrunCount, Converter={StaticResource DoubleToBoolConverter}, ConverterParameter=9999}" Value="True">
                    <Setter Property="TextBlock.FontSize" Value="12" />
                    <Setter Property="FrameworkElement.Margin" Value="0,0,0,0" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>
          <TextBlock Grid.Row="3" HorizontalAlignment="Center" Margin="0" Padding="0">
            <TextBlock.Style>
              <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="None">
                    <Setter Property="TextBlock.Text" Value="Disconnected" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="Connected">
                    <Setter Property="TextBlock.Text" Value="Synchronising" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="Transmitting">
                    <Setter Property="TextBlock.Text" Value="Transmitting" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="BufferUnderrun">
                    <Setter Property="TextBlock.Text" Value="Overload!" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ConnectionStatus}" Value="ConnectionLost">
                    <Setter Property="TextBlock.Text" Value="Connection lost!" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>
        </Grid>
      </GroupBox>
      <GroupBox Name="SatLimitGroupBox" Grid.Column="1" Margin="3,1,0,6">
        <GroupBox.Header>
          <CheckBox Name="SatCountLimitCheckBox" Content="Satellite number limit" IsChecked="{Binding IsSatCountLimitEnabled}" />
        </GroupBox.Header>
        <Grid IsEnabled="{Binding ElementName=SatCountLimitCheckBox, Path=IsChecked}">
          <Grid.RowDefinitions>
            <RowDefinition Height="3*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <RadioButton Name="AutomaticRadioButton" Content="Automatic" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0" IsChecked="{Binding SatCountLimitMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static satgen:SatCountLimitMode.Automatic}}" />
          <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Left">
            <ctr:NumericSpinner Name="AutomaticLimitNumericSpinner" MinWidth="44" Margin="8,0" Minimum="0" Maximum="99" Value="{Binding AutomaticSatCountLimit}" IsEnabled="{Binding ElementName=AutomaticRadioButton, Path=IsChecked}" />
            <Button Name="ResetButton" Content="Reset" Height="23" MinWidth="44" HorizontalAlignment="Center" Margin="0,0,8,0" IsEnabled="{Binding ElementName=AutomaticRadioButton, Path=IsChecked}" Command="{Binding ResetSatCountLimit}" />
          </StackPanel>
          <RadioButton Name="ManualRadioButton" Content="Manual" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,8,0" IsChecked="{Binding SatCountLimitMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static satgen:SatCountLimitMode.Manual}}" />
          <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding ElementName=ManualRadioButton, Path=IsChecked}">
            <Label Name="GpsLimitLabel" Content="GPS" Margin="0" Padding="0" VerticalAlignment="Center" IsEnabled="{Binding IsGpsPresent}" MinWidth="{Binding ElementName=GalileoLimitLabel, Path=ActualWidth}" />
            <ctr:NumericSpinner Name="GpsLimitNumericSpinner" Minimum="0" Maximum="37" Width="44" Margin="3,0,8,0" Value="{Binding GpsSatCountLimit}" IsEnabled="{Binding IsGpsPresent}" />
          </StackPanel>
          <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="3" IsEnabled="{Binding ElementName=ManualRadioButton, Path=IsChecked}">
            <Label Name="GalileoLimitLabel" Content="GAL" Margin="0" Padding="0" VerticalAlignment="Center" IsEnabled="{Binding IsGalileoPresent}" MinWidth="{Binding ElementName=GpsLimitLabel, Path=ActualWidth}" />
            <ctr:NumericSpinner Name="GalileoLimitNumericSpinner" Minimum="0" Maximum="37" Width="44" Margin="3,0,8,0" Value="{Binding GalileoSatCountLimit}" IsEnabled="{Binding IsGalileoPresent}" />
          </StackPanel>
          <StackPanel Orientation="Horizontal" Grid.Column="3" Grid.Row="1" IsEnabled="{Binding ElementName=ManualRadioButton, Path=IsChecked}">
            <Label Name="GlonassLimitLabel" Content="GLO" Margin="0" Padding="0" VerticalAlignment="Center" IsEnabled="{Binding IsGlonassPresent}" MinWidth="{Binding ElementName=BeiDouLimitLabel, Path=ActualWidth}" />
            <ctr:NumericSpinner Name="GloLimitNumericSpinner" Minimum="0" Maximum="37" Width="44" Margin="3,0,8,0" Value="{Binding GlonassSatCountLimit}" IsEnabled="{Binding IsGlonassPresent}" />
          </StackPanel>
          <StackPanel Orientation="Horizontal" Grid.Column="3" Grid.Row="3" IsEnabled="{Binding ElementName=ManualRadioButton, Path=IsChecked}">
            <Label Name="BeiDouLimitLabel" Content="BDS" Margin="0" Padding="0" VerticalAlignment="Center" IsEnabled="{Binding IsBeiDouPresent}" MinWidth="{Binding ElementName=GlonassLimitLabel, Path=ActualWidth}" />
            <ctr:NumericSpinner Name="BeiDouLimitNumericSpinner" Minimum="0" Maximum="37" Width="44" Margin="3,0,8,0" Value="{Binding BeiDouSatCountLimit}" IsEnabled="{Binding IsBeiDouPresent}" />
          </StackPanel>
        </Grid>
      </GroupBox>
      <Button Name="CancelButton" Content="Stop" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="75" Height="23" Margin="8,0,16,0" Click="OnCancelButtonClick" />
    </Grid>
    <TabControl Grid.Row="2" Padding="0" SelectedIndex="0" ItemsSource="{Binding VisibleSatellites}">
      <TabControl.ItemTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <CheckBox Margin="0,1,0,0" IsChecked="{Binding IsEnabled}" />
            <TextBlock Margin="6,0,4,0" Text="{Binding ConstellationAndSatCount}" />
          </StackPanel>
        </DataTemplate>
      </TabControl.ItemTemplate>
      <TabControl.ContentTemplate>
        <DataTemplate>
          <ScrollViewer Grid.Row="0" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Hidden" IsEnabled="{Binding IsEnabled}">
            <ScrollViewer.Style>
              <Style TargetType="{x:Type ScrollViewer}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                    <Setter Property="UIElement.Opacity" Value="0.6" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </ScrollViewer.Style>
            <ItemsControl ItemsSource="{Binding Satellites}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" Margin="2" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.Style>
                      <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="UIElement.Opacity" Value="0.6" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Grid.Style>
                    <Label Grid.Row="0" HorizontalAlignment="Center" Padding="0" Margin="0,4,0,0" Content="{Binding Id}" IsEnabled="{Binding IsEnabled}" />
                    <CheckBox Grid.Row="1" HorizontalAlignment="Center" Margin="0,0,0,6" IsChecked="{Binding IsEnabled}" IsEnabled="{Binding ElementName=SatCountLimitCheckBox, Path=IsChecked, Converter={StaticResource NegatingConverter}}" />
                    <Slider Grid.Row="2" Orientation="Vertical" HorizontalAlignment="Center" TickPlacement="Both" TickFrequency="10" LargeChange="10" SmallChange="1" Minimum="{Binding Group.AttenuationRange.Min, Mode=OneTime}" Maximum="{Binding Group.AttenuationRange.Max, Mode=OneTime}" IsEnabled="{Binding IsEnabled}">
                      <Slider.Value>
                        <MultiBinding Converter="{StaticResource AttenuationMultiValueConverter}">
                          <Binding Path="Attenuation" />
                          <Binding Path="Group.AttenuationRange.Min" Mode="OneTime" />
                        </MultiBinding>
                      </Slider.Value>
                    </Slider>
                    <TextBox Grid.Row="3" IsReadOnly="True" HorizontalContentAlignment="Right" Width="44" Margin="1,2" Text="{Binding Path=AttenuationText, Mode=OneWay}" IsEnabled="{Binding IsEnabled}" />
                  </Grid>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </ScrollViewer>
        </DataTemplate>
      </TabControl.ContentTemplate>
    </TabControl>
    <CheckBox Content="Link sliders" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="8,2,14,2" IsChecked="{Binding AttenuationsLinked}" />
  </Grid>
</UserControl>